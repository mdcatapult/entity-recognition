// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	remote "gitlab.mdcatapult.io/informatics/software-engineering/entity-recognition/go/lib/cache/remote"
)

// RemoteCacheClient is an autogenerated mock type for the RemoteCacheClient type
type RemoteCacheClient struct {
	mock.Mock
}

// NewGetPipeline provides a mock function with given fields: size
func (_m *RemoteCacheClient) NewGetPipeline(size int) remote.GetPipeline {
	ret := _m.Called(size)

	var r0 remote.GetPipeline
	if rf, ok := ret.Get(0).(func(int) remote.GetPipeline); ok {
		r0 = rf(size)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(remote.GetPipeline)
		}
	}

	return r0
}

// NewSetPipeline provides a mock function with given fields: size
func (_m *RemoteCacheClient) NewSetPipeline(size int) remote.SetPipeline {
	ret := _m.Called(size)

	var r0 remote.SetPipeline
	if rf, ok := ret.Get(0).(func(int) remote.SetPipeline); ok {
		r0 = rf(size)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(remote.SetPipeline)
		}
	}

	return r0
}

// Ready provides a mock function with given fields:
func (_m *RemoteCacheClient) Ready() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}
